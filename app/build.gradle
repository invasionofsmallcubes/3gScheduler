apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    dependencies {
        testCompile 'org.robolectric:robolectric:3.0'
        testCompile 'org.robolectric:shadows-support-v4:3.0'
        testCompile 'org.mockito:mockito-all:1.10.19'
        testCompile 'junit:junit:4.12'
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.1-2'
}

tasks.withType(Test).whenTaskAdded {
    project.android.defaultConfig.applicationId 'com.bitquartet.tgscheduler.app'
}

jacoco {
    toolVersion = "0.7.1.201405082137"
//    reportsDir = file("$buildDir/reports/jacoco/")
}


def coverageSourceDirs = [
        'src/main/java',
        'src/gen'
]
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
        xml.destination "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }

    // Class R is used, but usage will not be covered, so ignore this class from report
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
}